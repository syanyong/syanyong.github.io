<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.3.2">Jekyll</generator><link href="/feed.xml" rel="self" type="application/atom+xml" /><link href="/" rel="alternate" type="text/html" /><updated>2025-07-22T04:32:28+00:00</updated><id>/feed.xml</id><title type="html">Sarucha Yanyong</title><subtitle>Lecturer/Software Developer for Dr. Sarucha Yanyong (ดร.ศรุชา ยรรยง)</subtitle><entry><title type="html">Robotics Lab 2 - Autonomous Mobile Robot</title><link href="/teaching/2023/07/21/Lab2.html" rel="alternate" type="text/html" title="Robotics Lab 2 - Autonomous Mobile Robot" /><published>2023-07-21T01:00:00+00:00</published><updated>2023-07-21T01:00:00+00:00</updated><id>/teaching/2023/07/21/Lab2</id><content type="html" xml:base="/teaching/2023/07/21/Lab2.html"><![CDATA[<p>Robotics Lab 2</p>

<h1 id="chapter-2">Chapter 2</h1>
<p><a href="https://kmitlthailand-my.sharepoint.com/:w:/g/personal/sarucha_ya_kmitl_ac_th/EWumj87El6FIp93vFW0yvIEBKgxdV5M4RJ_7dItedYyP9g">Mobile Robot Lab Sheet Chapter 2</a></p>

<h1 id="chapter-3">Chapter 3</h1>
<p><a href="https://kmitlthailand-my.sharepoint.com/:w:/g/personal/sarucha_ya_kmitl_ac_th/ESVvMJnzm2lFl1cohUJev78B4pUb3j-fbqm9L1u0v3lgdA?e=3mwHGh">Mobile Robot Lab Sheet Chapter 3</a></p>]]></content><author><name></name></author><category term="teaching" /><summary type="html"><![CDATA[Robotics Lab 2]]></summary></entry><entry><title type="html">ROS Workshop Day 2 Cheatsheet (Node Communication)</title><link href="/teaching/2020/07/03/ROS-Workshop-day2.html" rel="alternate" type="text/html" title="ROS Workshop Day 2 Cheatsheet (Node Communication)" /><published>2020-07-03T01:00:00+00:00</published><updated>2020-07-03T01:00:00+00:00</updated><id>/teaching/2020/07/03/ROS-Workshop-day2</id><content type="html" xml:base="/teaching/2020/07/03/ROS-Workshop-day2.html"><![CDATA[<p>รวมคำสั่งต่างๆที่ใช้ในการอบรม ROS วันที่ 2</p>

<h2 id="example-sourcecode">Example sourcecode</h2>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">#!/usr/bin/env python
</span><span class="kn">import</span> <span class="nn">rospy</span>
<span class="kn">from</span> <span class="nn">geometry_msgs.msg</span> <span class="kn">import</span> <span class="n">Twist</span>
<span class="n">vel</span> <span class="o">=</span> <span class="n">Twist</span><span class="p">()</span>
<span class="k">def</span> <span class="nf">main</span> <span class="p">():</span>
    <span class="n">rospy</span><span class="p">.</span><span class="n">init_node</span><span class="p">(</span><span class="s">'turtle_commander'</span><span class="p">,</span> <span class="n">anonymous</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
    <span class="n">rate</span> <span class="o">=</span> <span class="n">rospy</span><span class="p">.</span><span class="n">Rate</span><span class="p">(</span><span class="mi">10</span><span class="p">)</span> <span class="c1"># 10 Hz
</span>    <span class="n">pub</span> <span class="o">=</span> <span class="n">rospy</span><span class="p">.</span><span class="n">Publisher</span><span class="p">(</span><span class="s">'/turtle1/cmd_vel'</span><span class="p">,</span> <span class="n">Twist</span><span class="p">,</span><span class="n">queue_size</span><span class="o">=</span><span class="mi">10</span><span class="p">)</span>
    
    <span class="k">while</span> <span class="ow">not</span> <span class="n">rospy</span><span class="p">.</span><span class="n">is_shutdown</span><span class="p">():</span>
        <span class="c1"># TODO
</span>        <span class="k">print</span><span class="p">(</span><span class="s">"Turtle is running."</span><span class="p">)</span>
        <span class="c1"># END
</span>        <span class="n">pub</span><span class="p">.</span><span class="n">publish</span><span class="p">(</span><span class="n">vel</span><span class="p">)</span>
        <span class="n">rate</span><span class="p">.</span><span class="n">sleep</span><span class="p">()</span>
        
<span class="k">if</span> <span class="n">__name__</span> <span class="o">==</span> <span class="s">'__main__'</span><span class="p">:</span>
    <span class="k">try</span><span class="p">:</span>
        <span class="n">main</span> <span class="p">()</span>
    <span class="k">except</span> <span class="n">rospy</span><span class="p">.</span><span class="n">ROSInterruptException</span><span class="p">:</span>
        <span class="k">pass</span>
</code></pre></div></div>

<h2 id="example-sourcecode-for-assignment">Example sourcecode for assignment</h2>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">#!/usr/bin/env python
</span><span class="kn">import</span> <span class="nn">rospy</span>
<span class="kn">from</span> <span class="nn">geometry_msgs.msg</span> <span class="kn">import</span> <span class="n">Twist</span>
<span class="kn">import</span> <span class="nn">time</span>
<span class="n">vel</span> <span class="o">=</span> <span class="n">Twist</span><span class="p">()</span>  <span class="c1"># Variable Twist
</span><span class="k">def</span> <span class="nf">main</span> <span class="p">():</span>
    <span class="n">rospy</span><span class="p">.</span><span class="n">init_node</span><span class="p">(</span><span class="s">'turtle_commander'</span><span class="p">,</span> <span class="n">anonymous</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
    <span class="n">rate</span> <span class="o">=</span> <span class="n">rospy</span><span class="p">.</span><span class="n">Rate</span><span class="p">(</span><span class="mi">10</span><span class="p">)</span> <span class="c1"># 10 Hz
</span>    <span class="n">pub</span> <span class="o">=</span> <span class="n">rospy</span><span class="p">.</span><span class="n">Publisher</span><span class="p">(</span><span class="s">'/turtle1/cmd_vel'</span><span class="p">,</span> <span class="n">Twist</span><span class="p">,</span><span class="n">queue_size</span><span class="o">=</span><span class="mi">10</span><span class="p">)</span>
    
    <span class="n">timestart</span> <span class="o">=</span> <span class="n">time</span><span class="p">.</span><span class="n">time</span><span class="p">()</span>
    <span class="k">while</span> <span class="ow">not</span> <span class="n">rospy</span><span class="p">.</span><span class="n">is_shutdown</span><span class="p">():</span>
        <span class="n">timenow</span> <span class="o">=</span> <span class="n">time</span><span class="p">.</span><span class="n">time</span><span class="p">()</span>
        <span class="n">counter</span> <span class="o">=</span> <span class="n">timenow</span> <span class="o">-</span> <span class="n">timestart</span>
        <span class="c1"># TODO
</span>        <span class="k">print</span><span class="p">(</span><span class="s">"Turtle is running."</span><span class="p">,</span> <span class="n">counter</span><span class="p">)</span>
        
        <span class="k">if</span> <span class="p">(</span><span class="n">counter</span> <span class="o">&gt;</span><span class="mi">0</span> <span class="ow">and</span> <span class="n">counter</span> <span class="o">&lt;=</span> <span class="mi">2</span><span class="p">):</span>
            <span class="n">vel</span><span class="p">.</span><span class="n">linear</span><span class="p">.</span><span class="n">x</span> <span class="o">=</span> <span class="mi">1</span>
        <span class="k">elif</span> <span class="p">(</span><span class="n">counter</span> <span class="o">&gt;</span><span class="mi">2</span> <span class="ow">and</span> <span class="n">counter</span> <span class="o">&lt;=</span> <span class="mi">5</span><span class="p">):</span>
            <span class="n">vel</span><span class="p">.</span><span class="n">linear</span><span class="p">.</span><span class="n">x</span> <span class="o">=</span> <span class="mi">0</span>
            <span class="n">vel</span><span class="p">.</span><span class="n">angular</span><span class="p">.</span><span class="n">z</span> <span class="o">=</span> <span class="mi">1</span>
        <span class="k">else</span><span class="p">:</span>
            <span class="n">vel</span><span class="p">.</span><span class="n">linear</span><span class="p">.</span><span class="n">x</span> <span class="o">=</span> <span class="mi">0</span>
            <span class="n">vel</span><span class="p">.</span><span class="n">angular</span><span class="p">.</span><span class="n">z</span> <span class="o">=</span> <span class="mi">0</span>
            <span class="k">break</span>
        <span class="c1"># END
</span>        <span class="n">pub</span><span class="p">.</span><span class="n">publish</span><span class="p">(</span><span class="n">vel</span><span class="p">)</span>
        <span class="n">rate</span><span class="p">.</span><span class="n">sleep</span><span class="p">()</span>
        
<span class="k">if</span> <span class="n">__name__</span> <span class="o">==</span> <span class="s">'__main__'</span><span class="p">:</span>
    <span class="k">try</span><span class="p">:</span>
        <span class="n">main</span> <span class="p">()</span>
    <span class="k">except</span> <span class="n">rospy</span><span class="p">.</span><span class="n">ROSInterruptException</span><span class="p">:</span>
        <span class="k">pass</span>
</code></pre></div></div>

<h2 id="example-sourcecode-for-publish-and-subscribe-assignment">Example sourcecode for Publish and Subscribe assignment</h2>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">#!/usr/bin/env python
</span><span class="kn">import</span> <span class="nn">rospy</span>
<span class="kn">from</span> <span class="nn">geometry_msgs.msg</span> <span class="kn">import</span> <span class="n">Twist</span>
<span class="kn">from</span> <span class="nn">turtlesim.msg</span> <span class="kn">import</span> <span class="n">Pose</span>      <span class="c1"># Import Pose object
</span><span class="kn">import</span> <span class="nn">time</span>
<span class="n">pos</span> <span class="o">=</span> <span class="n">Pose</span><span class="p">()</span>   <span class="c1"># Assign and set default
</span><span class="n">vel</span> <span class="o">=</span> <span class="n">Twist</span><span class="p">()</span>  <span class="c1"># Variable Twist
</span><span class="k">def</span> <span class="nf">position_callback</span><span class="p">(</span><span class="n">data</span><span class="p">):</span>
    <span class="s">"""Active when recevie info from topic"""</span>
    <span class="k">global</span> <span class="n">pos</span>  <span class="c1"># using global keyword to edit variable outside function
</span>    <span class="n">pos</span> <span class="o">=</span> <span class="n">data</span>
<span class="k">def</span> <span class="nf">main</span> <span class="p">():</span>
    <span class="n">rospy</span><span class="p">.</span><span class="n">init_node</span><span class="p">(</span><span class="s">'turtle_commander'</span><span class="p">,</span> <span class="n">anonymous</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
    <span class="n">rate</span> <span class="o">=</span> <span class="n">rospy</span><span class="p">.</span><span class="n">Rate</span><span class="p">(</span><span class="mi">10</span><span class="p">)</span> <span class="c1"># 10 Hz
</span>    <span class="n">pub</span> <span class="o">=</span> <span class="n">rospy</span><span class="p">.</span><span class="n">Publisher</span><span class="p">(</span><span class="s">'/turtle1/cmd_vel'</span><span class="p">,</span> <span class="n">Twist</span><span class="p">,</span><span class="n">queue_size</span><span class="o">=</span><span class="mi">10</span><span class="p">)</span>
    <span class="n">sub</span> <span class="o">=</span> <span class="n">rospy</span><span class="p">.</span><span class="n">Subscriber</span><span class="p">(</span><span class="s">'/turtle1/pose'</span><span class="p">,</span> <span class="n">Pose</span><span class="p">,</span> <span class="n">position_callback</span><span class="p">)</span>
    
    <span class="n">timestart</span> <span class="o">=</span> <span class="n">time</span><span class="p">.</span><span class="n">time</span><span class="p">()</span>
    <span class="n">state</span> <span class="o">=</span> <span class="mi">0</span>
    <span class="k">while</span> <span class="ow">not</span> <span class="n">rospy</span><span class="p">.</span><span class="n">is_shutdown</span><span class="p">():</span>
        <span class="n">timenow</span> <span class="o">=</span> <span class="n">time</span><span class="p">.</span><span class="n">time</span><span class="p">()</span>
        <span class="n">counter</span> <span class="o">=</span> <span class="n">timenow</span> <span class="o">-</span> <span class="n">timestart</span>
        <span class="c1"># TODO
</span>        <span class="k">print</span><span class="p">(</span><span class="s">"Turtle is running."</span><span class="p">,</span> <span class="n">state</span><span class="p">,</span> <span class="n">pos</span><span class="p">)</span>
        <span class="n">PI</span> <span class="o">=</span> <span class="mf">22.0</span><span class="o">/</span><span class="mf">7.0</span>
        <span class="k">if</span> <span class="n">state</span> <span class="o">==</span> <span class="mi">0</span> <span class="ow">and</span> <span class="n">pos</span><span class="p">.</span><span class="n">x</span> <span class="o">&lt;</span> <span class="mi">10</span><span class="p">:</span>    <span class="c1"># state 0 move to x = 10
</span>            <span class="n">vel</span><span class="p">.</span><span class="n">linear</span><span class="p">.</span><span class="n">x</span> <span class="o">=</span> <span class="mi">1</span>
        <span class="k">elif</span> <span class="n">state</span> <span class="o">==</span> <span class="mi">0</span> <span class="ow">and</span> <span class="n">pos</span><span class="p">.</span><span class="n">x</span> <span class="o">&gt;=</span> <span class="mi">10</span><span class="p">:</span>
            <span class="n">vel</span><span class="p">.</span><span class="n">linear</span><span class="p">.</span><span class="n">x</span> <span class="o">=</span> <span class="mi">0</span>
            <span class="n">state</span> <span class="o">=</span> <span class="mi">1</span>
            
        <span class="k">elif</span> <span class="n">state</span> <span class="o">==</span> <span class="mi">1</span> <span class="ow">and</span> <span class="n">pos</span><span class="p">.</span><span class="n">theta</span> <span class="o">&lt;</span> <span class="n">PI</span><span class="o">/</span><span class="mi">2</span><span class="p">:</span> <span class="c1"># state 1 rotate
</span>            <span class="n">vel</span><span class="p">.</span><span class="n">angular</span><span class="p">.</span><span class="n">z</span> <span class="o">=</span> <span class="mi">1</span>
        <span class="k">elif</span> <span class="n">state</span> <span class="o">==</span> <span class="mi">1</span> <span class="ow">and</span> <span class="n">pos</span><span class="p">.</span><span class="n">theta</span> <span class="o">&gt;=</span> <span class="n">PI</span><span class="o">/</span><span class="mi">2</span><span class="p">:</span>
            <span class="n">vel</span><span class="p">.</span><span class="n">angular</span><span class="p">.</span><span class="n">z</span> <span class="o">=</span> <span class="mi">0</span>
            <span class="n">state</span> <span class="o">=</span> <span class="mi">2</span>
        <span class="k">elif</span> <span class="n">state</span> <span class="o">==</span> <span class="mi">2</span> <span class="ow">and</span> <span class="n">pos</span><span class="p">.</span><span class="n">y</span> <span class="o">&lt;</span> <span class="mi">10</span><span class="p">:</span>    <span class="c1"># state 2
</span>            <span class="n">vel</span><span class="p">.</span><span class="n">linear</span><span class="p">.</span><span class="n">x</span> <span class="o">=</span> <span class="mi">1</span>
        <span class="k">elif</span> <span class="n">state</span> <span class="o">==</span> <span class="mi">2</span> <span class="ow">and</span> <span class="n">pos</span><span class="p">.</span><span class="n">y</span> <span class="o">&gt;=</span> <span class="mi">10</span><span class="p">:</span>
            <span class="n">vel</span><span class="p">.</span><span class="n">linear</span><span class="p">.</span><span class="n">x</span> <span class="o">=</span> <span class="mi">0</span>
            <span class="n">state</span> <span class="o">=</span> <span class="mi">3</span>
        <span class="k">else</span><span class="p">:</span>
            <span class="n">vel</span><span class="p">.</span><span class="n">linear</span><span class="p">.</span><span class="n">x</span> <span class="o">=</span> <span class="mi">0</span>
            <span class="n">vel</span><span class="p">.</span><span class="n">angular</span><span class="p">.</span><span class="n">z</span> <span class="o">=</span> <span class="mi">0</span>
            
        <span class="c1"># END
</span>        <span class="n">pub</span><span class="p">.</span><span class="n">publish</span><span class="p">(</span><span class="n">vel</span><span class="p">)</span>
        <span class="n">rate</span><span class="p">.</span><span class="n">sleep</span><span class="p">()</span>
        
<span class="k">if</span> <span class="n">__name__</span> <span class="o">==</span> <span class="s">'__main__'</span><span class="p">:</span>
    <span class="k">try</span><span class="p">:</span>
        <span class="n">main</span> <span class="p">()</span>
    <span class="k">except</span> <span class="n">rospy</span><span class="p">.</span><span class="n">ROSInterruptException</span><span class="p">:</span>
        <span class="k">pass</span>
</code></pre></div></div>]]></content><author><name></name></author><category term="teaching" /><summary type="html"><![CDATA[รวมคำสั่งต่างๆที่ใช้ในการอบรม ROS วันที่ 2]]></summary></entry><entry><title type="html">ROS Workshop Day 1 Cheatsheet (Lecture and File system)</title><link href="/teaching/2020/07/02/ROS-Workshop-day1.html" rel="alternate" type="text/html" title="ROS Workshop Day 1 Cheatsheet (Lecture and File system)" /><published>2020-07-02T01:00:00+00:00</published><updated>2020-07-02T01:00:00+00:00</updated><id>/teaching/2020/07/02/ROS-Workshop-day1</id><content type="html" xml:base="/teaching/2020/07/02/ROS-Workshop-day1.html"><![CDATA[<p>รวมคำสั่งต่างๆที่ใช้ในการอบรม ROS วันที่ 1</p>

<p>การสร้าง Workspace</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>mkdir -p ~/catkin_ws/src
cd ~/catkin_ws &amp;&amp; catkin_make
</code></pre></div></div>

<p>การสร้าง package</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>cd ~/catkin_ws/src
catkin_create_pkg my_turtlesim std_msgs rospy roscpp
cd ~/catkin_ws &amp;&amp; catkin_make
</code></pre></div></div>]]></content><author><name></name></author><category term="teaching" /><summary type="html"><![CDATA[รวมคำสั่งต่างๆที่ใช้ในการอบรม ROS วันที่ 1]]></summary></entry></feed>